/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5CSergio%20Gallegos%5Cprojects%5Crust-ethernet-ip%5Cexamples%5Cgonextjs%5Cfrontend%5Csrc%5Capp%5Cpage.tsx&server=false!":
/*!**************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5CSergio%20Gallegos%5Cprojects%5Crust-ethernet-ip%5Cexamples%5Cgonextjs%5Cfrontend%5Csrc%5Capp%5Cpage.tsx&server=false! ***!
  \**************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/page.tsx */ \"(app-pages-browser)/./src/app/page.tsx\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz1DJTNBJTVDVXNlcnMlNUNTZXJnaW8lMjBHYWxsZWdvcyU1Q3Byb2plY3RzJTVDcnVzdC1ldGhlcm5ldC1pcCU1Q2V4YW1wbGVzJTVDZ29uZXh0anMlNUNmcm9udGVuZCU1Q3NyYyU1Q2FwcCU1Q3BhZ2UudHN4JnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLz82Zjc4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcU2VyZ2lvIEdhbGxlZ29zXFxcXHByb2plY3RzXFxcXHJ1c3QtZXRoZXJuZXQtaXBcXFxcZXhhbXBsZXNcXFxcZ29uZXh0anNcXFxcZnJvbnRlbmRcXFxcc3JjXFxcXGFwcFxcXFxwYWdlLnRzeFwiKSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5CSergio%20Gallegos%5Cprojects%5Crust-ethernet-ip%5Cexamples%5Cgonextjs%5Cfrontend%5Csrc%5Capp%5Cpage.tsx&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    (function() {\n        \"use strict\";\n        var React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n        // ATTENTION\n        // When adding new symbols to this file,\n        // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n        // The Symbol used to tag the ReactElement-like types.\n        var REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\n        var REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\n        var REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\n        var REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\n        var REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n        var REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\n        var REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\n        var REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\n        var REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\n        var REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\n        var REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\n        var REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\n        var REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\n        var REACT_CACHE_TYPE = Symbol.for(\"react.cache\");\n        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n        var FAUX_ITERATOR_SYMBOL = \"@@iterator\";\n        function getIteratorFn(maybeIterable) {\n            if (maybeIterable === null || typeof maybeIterable !== \"object\") {\n                return null;\n            }\n            var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n            if (typeof maybeIterator === \"function\") {\n                return maybeIterator;\n            }\n            return null;\n        }\n        var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n        function error(format) {\n            {\n                {\n                    for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++){\n                        args[_key2 - 1] = arguments[_key2];\n                    }\n                    printWarning(\"error\", format, args);\n                }\n            }\n        }\n        function printWarning(level, format, args) {\n            // When changing this logic, you might want to also\n            // update consoleWithStackDev.www.js as well.\n            {\n                var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n                var stack = ReactDebugCurrentFrame.getStackAddendum();\n                if (stack !== \"\") {\n                    format += \"%s\";\n                    args = args.concat([\n                        stack\n                    ]);\n                } // eslint-disable-next-line react-internal/safe-string-coercion\n                var argsWithFormat = args.map(function(item) {\n                    return String(item);\n                }); // Careful: RN currently depends on this prefix\n                argsWithFormat.unshift(\"Warning: \" + format); // We intentionally don't use spread (or .apply) directly because it\n                // breaks IE9: https://github.com/facebook/react/issues/13610\n                // eslint-disable-next-line react-internal/no-production-logging\n                Function.prototype.apply.call(console[level], console, argsWithFormat);\n            }\n        }\n        // -----------------------------------------------------------------------------\n        var enableScopeAPI = false; // Experimental Create Event Handle API.\n        var enableCacheElement = false;\n        var enableTransitionTracing = false; // No known bugs, but needs performance testing\n        var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n        // stuff. Intended to enable React core members to more easily debug scheduling\n        // issues in DEV builds.\n        var enableDebugTracing = false;\n        var REACT_CLIENT_REFERENCE$2 = Symbol.for(\"react.client.reference\");\n        function isValidElementType(type) {\n            if (typeof type === \"string\" || typeof type === \"function\") {\n                return true;\n            } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n            if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {\n                return true;\n            }\n            if (typeof type === \"object\" && type !== null) {\n                if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n                // types supported by any Flight configuration anywhere since\n                // we don't know which Flight build this will end up being used\n                // with.\n                type.$$typeof === REACT_CLIENT_REFERENCE$2 || type.getModuleId !== undefined) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        function getWrappedName(outerType, innerType, wrapperName) {\n            var displayName = outerType.displayName;\n            if (displayName) {\n                return displayName;\n            }\n            var functionName = innerType.displayName || innerType.name || \"\";\n            return functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n        } // Keep in sync with react-reconciler/getComponentNameFromFiber\n        function getContextName(type) {\n            return type.displayName || \"Context\";\n        }\n        var REACT_CLIENT_REFERENCE$1 = Symbol.for(\"react.client.reference\"); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n        function getComponentNameFromType(type) {\n            if (type == null) {\n                // Host root, text node or just invalid type.\n                return null;\n            }\n            if (typeof type === \"function\") {\n                if (type.$$typeof === REACT_CLIENT_REFERENCE$1) {\n                    // TODO: Create a convention for naming client references with debug info.\n                    return null;\n                }\n                return type.displayName || type.name || null;\n            }\n            if (typeof type === \"string\") {\n                return type;\n            }\n            switch(type){\n                case REACT_FRAGMENT_TYPE:\n                    return \"Fragment\";\n                case REACT_PORTAL_TYPE:\n                    return \"Portal\";\n                case REACT_PROFILER_TYPE:\n                    return \"Profiler\";\n                case REACT_STRICT_MODE_TYPE:\n                    return \"StrictMode\";\n                case REACT_SUSPENSE_TYPE:\n                    return \"Suspense\";\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return \"SuspenseList\";\n                case REACT_CACHE_TYPE:\n                    {\n                        return \"Cache\";\n                    }\n            }\n            if (typeof type === \"object\") {\n                {\n                    if (typeof type.tag === \"number\") {\n                        error(\"Received an unexpected object in getComponentNameFromType(). \" + \"This is likely a bug in React. Please file an issue.\");\n                    }\n                }\n                switch(type.$$typeof){\n                    case REACT_CONTEXT_TYPE:\n                        var context = type;\n                        return getContextName(context) + \".Consumer\";\n                    case REACT_PROVIDER_TYPE:\n                        var provider = type;\n                        return getContextName(provider._context) + \".Provider\";\n                    case REACT_FORWARD_REF_TYPE:\n                        return getWrappedName(type, type.render, \"ForwardRef\");\n                    case REACT_MEMO_TYPE:\n                        var outerName = type.displayName || null;\n                        if (outerName !== null) {\n                            return outerName;\n                        }\n                        return getComponentNameFromType(type.type) || \"Memo\";\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                return getComponentNameFromType(init(payload));\n                            } catch (x) {\n                                return null;\n                            }\n                        }\n                }\n            }\n            return null;\n        }\n        var assign = Object.assign;\n        // Helpers to patch console.logs to avoid logging during side-effect free\n        // replaying on render function. This currently only patches the object\n        // lazily which won't cover if the log function was extracted eagerly.\n        // We could also eagerly patch the method.\n        var disabledDepth = 0;\n        var prevLog;\n        var prevInfo;\n        var prevWarn;\n        var prevError;\n        var prevGroup;\n        var prevGroupCollapsed;\n        var prevGroupEnd;\n        function disabledLog() {}\n        disabledLog.__reactDisabledLog = true;\n        function disableLogs() {\n            {\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;\n                    prevInfo = console.info;\n                    prevWarn = console.warn;\n                    prevError = console.error;\n                    prevGroup = console.group;\n                    prevGroupCollapsed = console.groupCollapsed;\n                    prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n                    var props = {\n                        configurable: true,\n                        enumerable: true,\n                        value: disabledLog,\n                        writable: true\n                    }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        info: props,\n                        log: props,\n                        warn: props,\n                        error: props,\n                        group: props,\n                        groupCollapsed: props,\n                        groupEnd: props\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                disabledDepth++;\n            }\n        }\n        function reenableLogs() {\n            {\n                disabledDepth--;\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ var props = {\n                        configurable: true,\n                        enumerable: true,\n                        writable: true\n                    }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        log: assign({}, props, {\n                            value: prevLog\n                        }),\n                        info: assign({}, props, {\n                            value: prevInfo\n                        }),\n                        warn: assign({}, props, {\n                            value: prevWarn\n                        }),\n                        error: assign({}, props, {\n                            value: prevError\n                        }),\n                        group: assign({}, props, {\n                            value: prevGroup\n                        }),\n                        groupCollapsed: assign({}, props, {\n                            value: prevGroupCollapsed\n                        }),\n                        groupEnd: assign({}, props, {\n                            value: prevGroupEnd\n                        })\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                if (disabledDepth < 0) {\n                    error(\"disabledDepth fell below zero. \" + \"This is a bug in React. Please file an issue.\");\n                }\n            }\n        }\n        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n        var prefix;\n        function describeBuiltInComponentFrame(name, source, ownerFn) {\n            {\n                if (prefix === undefined) {\n                    // Extract the VM specific prefix used by each line.\n                    try {\n                        throw Error();\n                    } catch (x) {\n                        var match = x.stack.trim().match(/\\n( *(at )?)/);\n                        prefix = match && match[1] || \"\";\n                    }\n                } // We use the prefix to ensure our stacks line up with native stack frames.\n                return \"\\n\" + prefix + name;\n            }\n        }\n        var reentry = false;\n        var componentFrameCache;\n        {\n            var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\n            componentFrameCache = new PossiblyWeakMap();\n        }\n        /**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */ function describeNativeComponentFrame(fn, construct) {\n            // If something asked for a stack inside a fake render, it should get ignored.\n            if (!fn || reentry) {\n                return \"\";\n            }\n            {\n                var frame = componentFrameCache.get(fn);\n                if (frame !== undefined) {\n                    return frame;\n                }\n            }\n            reentry = true;\n            var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n            Error.prepareStackTrace = undefined;\n            var previousDispatcher;\n            {\n                previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n                // for warnings.\n                ReactCurrentDispatcher.current = null;\n                disableLogs();\n            }\n            /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */ var RunInRootFrame = {\n                DetermineComponentFrameRoot: function() {\n                    var control;\n                    try {\n                        // This should throw.\n                        if (construct) {\n                            // Something should be setting the props in the constructor.\n                            var Fake = function() {\n                                throw Error();\n                            }; // $FlowFixMe[prop-missing]\n                            Object.defineProperty(Fake.prototype, \"props\", {\n                                set: function() {\n                                    // We use a throwing setter instead of frozen or non-writable props\n                                    // because that won't throw in a non-strict mode function.\n                                    throw Error();\n                                }\n                            });\n                            if (typeof Reflect === \"object\" && Reflect.construct) {\n                                // We construct a different control for this case to include any extra\n                                // frames added by the construct call.\n                                try {\n                                    Reflect.construct(Fake, []);\n                                } catch (x) {\n                                    control = x;\n                                }\n                                Reflect.construct(fn, [], Fake);\n                            } else {\n                                try {\n                                    Fake.call();\n                                } catch (x) {\n                                    control = x;\n                                } // $FlowFixMe[prop-missing] found when upgrading Flow\n                                fn.call(Fake.prototype);\n                            }\n                        } else {\n                            try {\n                                throw Error();\n                            } catch (x) {\n                                control = x;\n                            } // TODO(luna): This will currently only throw if the function component\n                            // tries to access React/ReactDOM/props. We should probably make this throw\n                            // in simple components too\n                            var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n                            // component, which we don't yet support. Attach a noop catch handler to\n                            // silence the error.\n                            // TODO: Implement component stacks for async client components?\n                            if (maybePromise && typeof maybePromise.catch === \"function\") {\n                                maybePromise.catch(function() {});\n                            }\n                        }\n                    } catch (sample) {\n                        // This is inlined manually because closure doesn't do it for us.\n                        if (sample && control && typeof sample.stack === \"string\") {\n                            return [\n                                sample.stack,\n                                control.stack\n                            ];\n                        }\n                    }\n                    return [\n                        null,\n                        null\n                    ];\n                }\n            }; // $FlowFixMe[prop-missing]\n            RunInRootFrame.DetermineComponentFrameRoot.displayName = \"DetermineComponentFrameRoot\";\n            var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, \"name\"); // Before ES6, the `name` property was not configurable.\n            if (namePropDescriptor && namePropDescriptor.configurable) {\n                // V8 utilizes a function's `name` property when generating a stack trace.\n                Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // is set to `false`.\n                // $FlowFixMe[cannot-write]\n                \"name\", {\n                    value: \"DetermineComponentFrameRoot\"\n                });\n            }\n            try {\n                var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(), sampleStack = _RunInRootFrame$Deter[0], controlStack = _RunInRootFrame$Deter[1];\n                if (sampleStack && controlStack) {\n                    // This extracts the first frame from the sample that isn't also in the control.\n                    // Skipping one frame that we assume is the frame that calls the two.\n                    var sampleLines = sampleStack.split(\"\\n\");\n                    var controlLines = controlStack.split(\"\\n\");\n                    var s = 0;\n                    var c = 0;\n                    while(s < sampleLines.length && !sampleLines[s].includes(\"DetermineComponentFrameRoot\")){\n                        s++;\n                    }\n                    while(c < controlLines.length && !controlLines[c].includes(\"DetermineComponentFrameRoot\")){\n                        c++;\n                    } // We couldn't find our intentionally injected common root frame, attempt\n                    // to find another common root frame by search from the bottom of the\n                    // control stack...\n                    if (s === sampleLines.length || c === controlLines.length) {\n                        s = sampleLines.length - 1;\n                        c = controlLines.length - 1;\n                        while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]){\n                            // We expect at least one stack frame to be shared.\n                            // Typically this will be the root most one. However, stack frames may be\n                            // cut off due to maximum stack limits. In this case, one maybe cut off\n                            // earlier than the other. We assume that the sample is longer or the same\n                            // and there for cut off earlier. So we should find the root most frame in\n                            // the sample somewhere in the control.\n                            c--;\n                        }\n                    }\n                    for(; s >= 1 && c >= 0; s--, c--){\n                        // Next we find the first one that isn't the same which should be the\n                        // frame that called our sample function and the control.\n                        if (sampleLines[s] !== controlLines[c]) {\n                            // In V8, the first line is describing the message but other VMs don't.\n                            // If we're about to return the first line, and the control is also on the same\n                            // line, that's a pretty good indicator that our sample threw at same line as\n                            // the control. I.e. before we entered the sample frame. So we ignore this result.\n                            // This can happen if you passed a class to function component, or non-function.\n                            if (s !== 1 || c !== 1) {\n                                do {\n                                    s--;\n                                    c--; // We may still have similar intermediate frames from the construct call.\n                                    // The next one that isn't the same should be our match though.\n                                    if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                                        // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                                        var _frame = \"\\n\" + sampleLines[s].replace(\" at new \", \" at \"); // If our component frame is labeled \"<anonymous>\"\n                                        // but we have a user-provided \"displayName\"\n                                        // splice it in to make the stack more readable.\n                                        if (fn.displayName && _frame.includes(\"<anonymous>\")) {\n                                            _frame = _frame.replace(\"<anonymous>\", fn.displayName);\n                                        }\n                                        if (true) {\n                                            if (typeof fn === \"function\") {\n                                                componentFrameCache.set(fn, _frame);\n                                            }\n                                        } // Return the line we found.\n                                        return _frame;\n                                    }\n                                }while (s >= 1 && c >= 0);\n                            }\n                            break;\n                        }\n                    }\n                }\n            } finally{\n                reentry = false;\n                {\n                    ReactCurrentDispatcher.current = previousDispatcher;\n                    reenableLogs();\n                }\n                Error.prepareStackTrace = previousPrepareStackTrace;\n            } // Fallback to just using the name if we couldn't make it throw.\n            var name = fn ? fn.displayName || fn.name : \"\";\n            var syntheticFrame = name ? describeBuiltInComponentFrame(name) : \"\";\n            {\n                if (typeof fn === \"function\") {\n                    componentFrameCache.set(fn, syntheticFrame);\n                }\n            }\n            return syntheticFrame;\n        }\n        function describeFunctionComponentFrame(fn, source, ownerFn) {\n            {\n                return describeNativeComponentFrame(fn, false);\n            }\n        }\n        function shouldConstruct(Component) {\n            var prototype = Component.prototype;\n            return !!(prototype && prototype.isReactComponent);\n        }\n        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n            if (type == null) {\n                return \"\";\n            }\n            if (typeof type === \"function\") {\n                {\n                    return describeNativeComponentFrame(type, shouldConstruct(type));\n                }\n            }\n            if (typeof type === \"string\") {\n                return describeBuiltInComponentFrame(type);\n            }\n            switch(type){\n                case REACT_SUSPENSE_TYPE:\n                    return describeBuiltInComponentFrame(\"Suspense\");\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return describeBuiltInComponentFrame(\"SuspenseList\");\n            }\n            if (typeof type === \"object\") {\n                switch(type.$$typeof){\n                    case REACT_FORWARD_REF_TYPE:\n                        return describeFunctionComponentFrame(type.render);\n                    case REACT_MEMO_TYPE:\n                        // Memo may contain any component type so we recursively resolve it.\n                        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                // Lazy may contain any component type so we recursively resolve it.\n                                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n                            } catch (x) {}\n                        }\n                }\n            }\n            return \"\";\n        }\n        // $FlowFixMe[method-unbinding]\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n        var loggedTypeFailures = {};\n        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n        function setCurrentlyValidatingElement$1(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n                }\n            }\n        }\n        function checkPropTypes(typeSpecs, values, location, componentName, element) {\n            {\n                // $FlowFixMe[incompatible-use] This is okay but Flow doesn't know it.\n                var has = Function.call.bind(hasOwnProperty);\n                for(var typeSpecName in typeSpecs){\n                    if (has(typeSpecs, typeSpecName)) {\n                        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n                        // fail the render phase where it didn't fail before. So we log it.\n                        // After these have been cleaned up, we'll let them throw.\n                        try {\n                            // This is intentionally an invariant that gets caught. It's the same\n                            // behavior as without this statement except with a better message.\n                            if (typeof typeSpecs[typeSpecName] !== \"function\") {\n                                // eslint-disable-next-line react-internal/prod-error-codes\n                                var err = Error((componentName || \"React class\") + \": \" + location + \" type `\" + typeSpecName + \"` is invalid; \" + \"it must be a function, usually from the `prop-types` package, but received `\" + typeof typeSpecs[typeSpecName] + \"`.\" + \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                                err.name = \"Invariant Violation\";\n                                throw err;\n                            }\n                            error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n                        } catch (ex) {\n                            error$1 = ex;\n                        }\n                        if (error$1 && !(error$1 instanceof Error)) {\n                            setCurrentlyValidatingElement$1(element);\n                            error(\"%s: type specification of %s\" + \" `%s` is invalid; the type checker \" + \"function must return `null` or an `Error` but returned a %s. \" + \"You may have forgotten to pass an argument to the type checker \" + \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" + \"shape all require an argument).\", componentName || \"React class\", location, typeSpecName, typeof error$1);\n                            setCurrentlyValidatingElement$1(null);\n                        }\n                        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n                            // Only monitor this failure once because there tends to be a lot of the\n                            // same error.\n                            loggedTypeFailures[error$1.message] = true;\n                            setCurrentlyValidatingElement$1(element);\n                            error(\"Failed %s type: %s\", location, error$1.message);\n                            setCurrentlyValidatingElement$1(null);\n                        }\n                    }\n                }\n            }\n        }\n        var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n        function isArray(a) {\n            return isArrayImpl(a);\n        }\n        /*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */ // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n        function typeName(value) {\n            {\n                // toStringTag is needed for namespaced types like Temporal.Instant\n                var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\n                var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || \"Object\"; // $FlowFixMe[incompatible-return]\n                return type;\n            }\n        } // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n        function willCoercionThrow(value) {\n            {\n                try {\n                    testStringCoercion(value);\n                    return false;\n                } catch (e) {\n                    return true;\n                }\n            }\n        }\n        function testStringCoercion(value) {\n            // If you ended up here by following an exception call stack, here's what's\n            // happened: you supplied an object or symbol value to React (as a prop, key,\n            // DOM attribute, CSS property, string ref, etc.) and when React tried to\n            // coerce it to a string using `'' + value`, an exception was thrown.\n            //\n            // The most common types that will cause this exception are `Symbol` instances\n            // and Temporal objects like `Temporal.Instant`. But any object that has a\n            // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n            // exception. (Library authors do this to prevent users from using built-in\n            // numeric operators like `+` or comparison operators like `>=` because custom\n            // methods are needed to perform accurate arithmetic or comparison.)\n            //\n            // To fix the problem, coerce this object or symbol value to a string before\n            // passing it to React. The most reliable way is usually `String(value)`.\n            //\n            // To find which value is throwing, check the browser or debugger console.\n            // Before this exception was thrown, there should be `console.error` output\n            // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n            // problem and how that type was used: key, atrribute, input value prop, etc.\n            // In most cases, this console output also shows the component and its\n            // ancestor components where the exception happened.\n            //\n            // eslint-disable-next-line react-internal/safe-string-coercion\n            return \"\" + value;\n        }\n        function checkKeyStringCoercion(value) {\n            {\n                if (willCoercionThrow(value)) {\n                    error(\"The provided key is an unsupported type %s.\" + \" This value must be coerced to a string before using it here.\", typeName(value));\n                    return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n                }\n            }\n        }\n        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\n        var RESERVED_PROPS = {\n            key: true,\n            ref: true,\n            __self: true,\n            __source: true\n        };\n        var specialPropKeyWarningShown;\n        var specialPropRefWarningShown;\n        var didWarnAboutStringRefs;\n        {\n            didWarnAboutStringRefs = {};\n        }\n        function hasValidRef(config) {\n            {\n                if (hasOwnProperty.call(config, \"ref\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"ref\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.ref !== undefined;\n        }\n        function hasValidKey(config) {\n            {\n                if (hasOwnProperty.call(config, \"key\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.key !== undefined;\n        }\n        function warnIfStringRefCannotBeAutoConverted(config, self) {\n            {\n                if (typeof config.ref === \"string\" && ReactCurrentOwner$1.current && self && ReactCurrentOwner$1.current.stateNode !== self) {\n                    var componentName = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n                    if (!didWarnAboutStringRefs[componentName]) {\n                        error('Component \"%s\" contains the string ref \"%s\". ' + \"Support for string refs will be removed in a future major release. \" + \"This case cannot be automatically converted to an arrow function. \" + \"We ask you to manually fix this case by using useRef() or createRef() instead. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-string-ref\", getComponentNameFromType(ReactCurrentOwner$1.current.type), config.ref);\n                        didWarnAboutStringRefs[componentName] = true;\n                    }\n                }\n            }\n        }\n        function defineKeyPropWarningGetter(props, displayName) {\n            {\n                var warnAboutAccessingKey = function() {\n                    if (!specialPropKeyWarningShown) {\n                        specialPropKeyWarningShown = true;\n                        error(\"%s: `key` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                };\n                warnAboutAccessingKey.isReactWarning = true;\n                Object.defineProperty(props, \"key\", {\n                    get: warnAboutAccessingKey,\n                    configurable: true\n                });\n            }\n        }\n        function defineRefPropWarningGetter(props, displayName) {\n            {\n                var warnAboutAccessingRef = function() {\n                    if (!specialPropRefWarningShown) {\n                        specialPropRefWarningShown = true;\n                        error(\"%s: `ref` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                };\n                warnAboutAccessingRef.isReactWarning = true;\n                Object.defineProperty(props, \"ref\", {\n                    get: warnAboutAccessingRef,\n                    configurable: true\n                });\n            }\n        }\n        /**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */ function ReactElement(type, key, ref, self, source, owner, props) {\n            var element = {\n                // This tag allows us to uniquely identify this as a React Element\n                $$typeof: REACT_ELEMENT_TYPE,\n                // Built-in properties that belong on the element\n                type: type,\n                key: key,\n                ref: ref,\n                props: props,\n                // Record the component responsible for creating this element.\n                _owner: owner\n            };\n            {\n                // The validation flag is currently mutative. We put it on\n                // an external backing store so that we can freeze the whole object.\n                // This can be replaced with a WeakMap once they are implemented in\n                // commonly used development environments.\n                element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n                // the validation flag non-enumerable (where possible, which should\n                // include every environment we run tests in), so the test framework\n                // ignores it.\n                Object.defineProperty(element._store, \"validated\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: true,\n                    value: false\n                }); // self and source are DEV only properties.\n                Object.defineProperty(element, \"_self\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: self\n                }); // Two elements created in two different places should be considered\n                // equal for testing purposes and therefore we hide it from enumeration.\n                Object.defineProperty(element, \"_source\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: source\n                });\n                if (Object.freeze) {\n                    Object.freeze(element.props);\n                    Object.freeze(element);\n                }\n            }\n            return element;\n        }\n        /**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */ function jsxDEV$1(type, config, maybeKey, source, self) {\n            {\n                var propName; // Reserved names are extracted\n                var props = {};\n                var key = null;\n                var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n                // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n                // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n                // but as an intermediary step, we will use jsxDEV for everything except\n                // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n                // key is explicitly declared to be undefined or not.\n                if (maybeKey !== undefined) {\n                    {\n                        checkKeyStringCoercion(maybeKey);\n                    }\n                    key = \"\" + maybeKey;\n                }\n                if (hasValidKey(config)) {\n                    {\n                        checkKeyStringCoercion(config.key);\n                    }\n                    key = \"\" + config.key;\n                }\n                if (hasValidRef(config)) {\n                    ref = config.ref;\n                    warnIfStringRefCannotBeAutoConverted(config, self);\n                } // Remaining properties are added to a new props object\n                for(propName in config){\n                    if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n                        props[propName] = config[propName];\n                    }\n                } // Resolve default props\n                if (type && type.defaultProps) {\n                    var defaultProps = type.defaultProps;\n                    for(propName in defaultProps){\n                        if (props[propName] === undefined) {\n                            props[propName] = defaultProps[propName];\n                        }\n                    }\n                }\n                if (key || ref) {\n                    var displayName = typeof type === \"function\" ? type.displayName || type.name || \"Unknown\" : type;\n                    if (key) {\n                        defineKeyPropWarningGetter(props, displayName);\n                    }\n                    if (ref) {\n                        defineRefPropWarningGetter(props, displayName);\n                    }\n                }\n                return ReactElement(type, key, ref, self, source, ReactCurrentOwner$1.current, props);\n            }\n        }\n        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n        var REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\n        function setCurrentlyValidatingElement(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame.setExtraStackFrame(null);\n                }\n            }\n        }\n        var propTypesMisspellWarningShown;\n        {\n            propTypesMisspellWarningShown = false;\n        }\n        /**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */ function isValidElement(object) {\n            {\n                return typeof object === \"object\" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n            }\n        }\n        function getDeclarationErrorAddendum() {\n            {\n                if (ReactCurrentOwner.current) {\n                    var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n                    if (name) {\n                        return \"\\n\\nCheck the render method of `\" + name + \"`.\";\n                    }\n                }\n                return \"\";\n            }\n        }\n        function getSourceInfoErrorAddendum(source) {\n            {\n                if (source !== undefined) {\n                    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, \"\");\n                    var lineNumber = source.lineNumber;\n                    return \"\\n\\nCheck your code at \" + fileName + \":\" + lineNumber + \".\";\n                }\n                return \"\";\n            }\n        }\n        /**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */ var ownerHasKeyUseWarning = {};\n        function getCurrentComponentErrorInfo(parentType) {\n            {\n                var info = getDeclarationErrorAddendum();\n                if (!info) {\n                    var parentName = getComponentNameFromType(parentType);\n                    if (parentName) {\n                        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n                    }\n                }\n                return info;\n            }\n        }\n        /**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */ function validateExplicitKey(element, parentType) {\n            {\n                if (!element._store || element._store.validated || element.key != null) {\n                    return;\n                }\n                element._store.validated = true;\n                var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n                if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n                    return;\n                }\n                ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n                // property, it may be the creator of the child that's responsible for\n                // assigning it a key.\n                var childOwner = \"\";\n                if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n                    // Give the component that originally created this child.\n                    childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n                }\n                setCurrentlyValidatingElement(element);\n                error('Each child in a list should have a unique \"key\" prop.' + \"%s%s See https://reactjs.org/link/warning-keys for more information.\", currentComponentErrorInfo, childOwner);\n                setCurrentlyValidatingElement(null);\n            }\n        }\n        /**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */ function validateChildKeys(node, parentType) {\n            {\n                if (typeof node !== \"object\" || !node) {\n                    return;\n                }\n                if (node.$$typeof === REACT_CLIENT_REFERENCE) ;\n                else if (isArray(node)) {\n                    for(var i = 0; i < node.length; i++){\n                        var child = node[i];\n                        if (isValidElement(child)) {\n                            validateExplicitKey(child, parentType);\n                        }\n                    }\n                } else if (isValidElement(node)) {\n                    // This element was passed in a valid location.\n                    if (node._store) {\n                        node._store.validated = true;\n                    }\n                } else {\n                    var iteratorFn = getIteratorFn(node);\n                    if (typeof iteratorFn === \"function\") {\n                        // Entry iterators used to provide implicit keys,\n                        // but now we print a separate warning for them later.\n                        if (iteratorFn !== node.entries) {\n                            var iterator = iteratorFn.call(node);\n                            var step;\n                            while(!(step = iterator.next()).done){\n                                if (isValidElement(step.value)) {\n                                    validateExplicitKey(step.value, parentType);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */ function validatePropTypes(element) {\n            {\n                var type = element.type;\n                if (type === null || type === undefined || typeof type === \"string\") {\n                    return;\n                }\n                if (type.$$typeof === REACT_CLIENT_REFERENCE) {\n                    return;\n                }\n                var propTypes;\n                if (typeof type === \"function\") {\n                    propTypes = type.propTypes;\n                } else if (typeof type === \"object\" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n                // Inner props are checked in the reconciler.\n                type.$$typeof === REACT_MEMO_TYPE)) {\n                    propTypes = type.propTypes;\n                } else {\n                    return;\n                }\n                if (propTypes) {\n                    // Intentionally inside to avoid triggering lazy initializers:\n                    var name = getComponentNameFromType(type);\n                    checkPropTypes(propTypes, element.props, \"prop\", name, element);\n                } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n                    propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n                    var _name = getComponentNameFromType(type);\n                    error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", _name || \"Unknown\");\n                }\n                if (typeof type.getDefaultProps === \"function\" && !type.getDefaultProps.isReactClassApproved) {\n                    error(\"getDefaultProps is only used on classic React.createClass \" + \"definitions. Use a static property named `defaultProps` instead.\");\n                }\n            }\n        }\n        /**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */ function validateFragmentProps(fragment) {\n            {\n                var keys = Object.keys(fragment.props);\n                for(var i = 0; i < keys.length; i++){\n                    var key = keys[i];\n                    if (key !== \"children\" && key !== \"key\") {\n                        setCurrentlyValidatingElement(fragment);\n                        error(\"Invalid prop `%s` supplied to `React.Fragment`. \" + \"React.Fragment can only have `key` and `children` props.\", key);\n                        setCurrentlyValidatingElement(null);\n                        break;\n                    }\n                }\n                if (fragment.ref !== null) {\n                    setCurrentlyValidatingElement(fragment);\n                    error(\"Invalid attribute `ref` supplied to `React.Fragment`.\");\n                    setCurrentlyValidatingElement(null);\n                }\n            }\n        }\n        var didWarnAboutKeySpread = {};\n        function jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n            {\n                var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n                // succeed and there will likely be errors in render.\n                if (!validType) {\n                    var info = \"\";\n                    if (type === undefined || typeof type === \"object\" && type !== null && Object.keys(type).length === 0) {\n                        info += \" You likely forgot to export your component from the file \" + \"it's defined in, or you might have mixed up default and named imports.\";\n                    }\n                    var sourceInfo = getSourceInfoErrorAddendum(source);\n                    if (sourceInfo) {\n                        info += sourceInfo;\n                    } else {\n                        info += getDeclarationErrorAddendum();\n                    }\n                    var typeString;\n                    if (type === null) {\n                        typeString = \"null\";\n                    } else if (isArray(type)) {\n                        typeString = \"array\";\n                    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n                        typeString = \"<\" + (getComponentNameFromType(type.type) || \"Unknown\") + \" />\";\n                        info = \" Did you accidentally export a JSX literal instead of a component?\";\n                    } else {\n                        typeString = typeof type;\n                    }\n                    error(\"React.jsx: type is invalid -- expected a string (for \" + \"built-in components) or a class/function (for composite \" + \"components) but got: %s.%s\", typeString, info);\n                }\n                var element = jsxDEV$1(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n                // TODO: Drop this when these are no longer allowed as the type argument.\n                if (element == null) {\n                    return element;\n                } // Skip key warning if the type isn't valid since our key validation logic\n                // doesn't expect a non-string/function type and can throw confusing errors.\n                // We don't want exception behavior to differ between dev and prod.\n                // (Rendering will throw with a helpful message and as soon as the type is\n                // fixed, the key warnings will appear.)\n                if (validType) {\n                    var children = props.children;\n                    if (children !== undefined) {\n                        if (isStaticChildren) {\n                            if (isArray(children)) {\n                                for(var i = 0; i < children.length; i++){\n                                    validateChildKeys(children[i], type);\n                                }\n                                if (Object.freeze) {\n                                    Object.freeze(children);\n                                }\n                            } else {\n                                error(\"React.jsx: Static children should always be an array. \" + \"You are likely explicitly calling React.jsxs or React.jsxDEV. \" + \"Use the Babel transform instead.\");\n                            }\n                        } else {\n                            validateChildKeys(children, type);\n                        }\n                    }\n                }\n                if (hasOwnProperty.call(props, \"key\")) {\n                    var componentName = getComponentNameFromType(type);\n                    var keys = Object.keys(props).filter(function(k) {\n                        return k !== \"key\";\n                    });\n                    var beforeExample = keys.length > 0 ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\" : \"{key: someKey}\";\n                    if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n                        var afterExample = keys.length > 0 ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\";\n                        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + \"  let props = %s;\\n\" + \"  <%s {...props} />\\n\" + \"React keys must be passed directly to JSX without using spread:\\n\" + \"  let props = %s;\\n\" + \"  <%s key={someKey} {...props} />\", beforeExample, componentName, afterExample, componentName);\n                        didWarnAboutKeySpread[componentName + beforeExample] = true;\n                    }\n                }\n                if (type === REACT_FRAGMENT_TYPE) {\n                    validateFragmentProps(element);\n                } else {\n                    validatePropTypes(element);\n                }\n                return element;\n            }\n        } // These two functions exist to still get child warnings in dev\n        var jsxDEV = jsxWithValidation;\n        exports.Fragment = REACT_FRAGMENT_TYPE;\n        exports.jsxDEV = jsxDEV;\n    })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBSUEsS0FBeUIsRUFBYyxFQUUxQyxNQUFNO0lBQ0xDLDhMQUF5QjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz9jYTIwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOlsicHJvY2VzcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"707b9dd3af86\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvZ2xvYmFscy5jc3M/YTNlYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjcwN2I5ZGQzYWY4NlwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Page; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_plcApi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/plcApi */ \"(app-pages-browser)/./src/lib/plcApi.ts\");\n/* harmony import */ var _globals_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./globals.css */ \"(app-pages-browser)/./src/app/globals.css\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n// Tab type definition\nconst TABS = [\n    \"Individual\",\n    \"Batch\",\n    \"Performance\",\n    \"Config\"\n];\nconst PLC_TYPES = [\n    {\n        label: \"Bool\",\n        value: \"Bool\"\n    },\n    {\n        label: \"Int\",\n        value: \"Int\"\n    },\n    {\n        label: \"Dint\",\n        value: \"Dint\"\n    },\n    {\n        label: \"Real\",\n        value: \"Real\"\n    },\n    {\n        label: \"String\",\n        value: \"String\"\n    }\n];\nfunction Page() {\n    var _benchmarkResults_readRate, _benchmarkResults_writeRate;\n    _s();\n    // Connection state\n    const [isConnected, setIsConnected] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [plcAddress, setPlcAddress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"192.168.0.1:44818\");\n    const [connectionStatus, setConnectionStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isConnecting, setIsConnecting] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [connectionIssues, setConnectionIssues] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Tab management\n    const [activeTab, setActiveTab] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"Individual\");\n    // Individual tag operations\n    const [tagName, setTagName] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [tagType, setTagType] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"String\");\n    const [tagValue, setTagValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [readValue, setReadValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isReading, setIsReading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isWriting, setIsWriting] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isDiscovering, setIsDiscovering] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isDebugReading, setIsDebugReading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Batch operations\n    const [batchTags, setBatchTags] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"TestTag:Bool\\nTestBool:Bool\\nTestInt:Dint\\nTestReal:Real\\nTestString:String\");\n    const [batchReadResult, setBatchReadResult] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [batchWriteData, setBatchWriteData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"TestTag:Bool=true\\nTestBool:Bool=false\\nTestInt:Dint=999\\nTestReal:Real=88.8\\nTestString:String=Hello PLC\");\n    const [batchWriteResult, setBatchWriteResult] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isBatchReading, setIsBatchReading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isBatchWriting, setIsBatchWriting] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Performance\n    const [benchmarkResults, setBenchmarkResults] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isRunningBenchmark, setIsRunningBenchmark] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [benchmarkTestTag, setBenchmarkTestTag] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [benchmarkTestType, setBenchmarkTestType] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"Dint\");\n    const [benchmarkTestWrites, setBenchmarkTestWrites] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Logging\n    const [logs, setLogs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const logCounterRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    const addLog = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((level, message)=>{\n        const logEntry = {\n            id: \"\".concat(Date.now(), \"-\").concat(logCounterRef.current),\n            timestamp: new Date().toLocaleTimeString(),\n            level,\n            message\n        };\n        setLogs((prev)=>[\n                logEntry,\n                ...prev.slice(0, 99)\n            ]);\n        logCounterRef.current += 1;\n    }, []);\n    // Connection handlers\n    const handleConnect = async ()=>{\n        setIsConnecting(true);\n        addLog(\"info\", \"Connecting to PLC at \".concat(plcAddress, \"...\"));\n        try {\n            await (0,_lib_plcApi__WEBPACK_IMPORTED_MODULE_2__.connectToPlc)(plcAddress);\n            setIsConnected(true);\n            setConnectionStatus(\"connected\");\n            addLog(\"success\", \"Connected to PLC at \".concat(plcAddress));\n        } catch (err) {\n            setIsConnected(false);\n            setConnectionStatus(\"error\");\n            addLog(\"error\", \"Failed to connect: \".concat(err.message || err));\n        } finally{\n            setIsConnecting(false);\n        }\n    };\n    const handleDisconnect = async ()=>{\n        await (0,_lib_plcApi__WEBPACK_IMPORTED_MODULE_2__.disconnectPlc)();\n        setIsConnected(false);\n        setConnectionStatus(null);\n        addLog(\"info\", \"Disconnected from PLC\");\n    };\n    // Individual tag handlers\n    const handleReadTag = async ()=>{\n        if (!tagName) return;\n        setIsReading(true);\n        addLog(\"info\", \"Reading tag: \".concat(tagName, \" (type: \").concat(tagType, \")\"));\n        try {\n            const value = await (0,_lib_plcApi__WEBPACK_IMPORTED_MODULE_2__.readTag)(tagName, tagType);\n            setReadValue(value.value);\n            addLog(\"success\", \"Read tag \".concat(tagName, \": \").concat(value.value));\n        } catch (err) {\n            addLog(\"error\", \"Failed to read tag \".concat(tagName, \": \").concat(err.message || err));\n        } finally{\n            setIsReading(false);\n        }\n    };\n    const handleWriteTag = async ()=>{\n        if (!tagName) return;\n        setIsWriting(true);\n        addLog(\"info\", \"Writing tag: \".concat(tagName, \" = \").concat(tagValue, \" (type: \").concat(tagType, \")\"));\n        try {\n            let valueToSend = tagValue;\n            if ([\n                \"Dint\",\n                \"Int\",\n                \"Real\"\n            ].includes(tagType)) {\n                valueToSend = Number(tagValue);\n                if (isNaN(valueToSend)) throw new Error(\"Invalid number value\");\n            } else if (tagType === \"Bool\") {\n                valueToSend = String(tagValue).toLowerCase() === \"true\";\n            }\n            await (0,_lib_plcApi__WEBPACK_IMPORTED_MODULE_2__.writeTag)(tagName, valueToSend, tagType);\n            addLog(\"success\", \"Wrote tag \".concat(tagName, \": \").concat(valueToSend));\n        } catch (err) {\n            addLog(\"error\", \"Failed to write tag \".concat(tagName, \": \").concat(err.message || err));\n        } finally{\n            setIsWriting(false);\n        }\n    };\n    const handleDiscoverTag = async ()=>{\n        if (!tagName) return;\n        setIsDiscovering(true);\n        addLog(\"info\", \"Discovering type for tag: \".concat(tagName));\n        try {\n            const discoveredType = await (0,_lib_plcApi__WEBPACK_IMPORTED_MODULE_2__.discoverTag)(tagName);\n            setTagType(discoveredType);\n            addLog(\"success\", \"Discovered type for tag \".concat(tagName, \": \").concat(discoveredType));\n        } catch (err) {\n            addLog(\"error\", \"Failed to discover tag type for \".concat(tagName, \": \").concat(err.message || err));\n        } finally{\n            setIsDiscovering(false);\n        }\n    };\n    const handleDebugRead = async ()=>{\n        if (!tagName) return;\n        setIsDebugReading(true);\n        addLog(\"info\", \"Debug reading tag: \".concat(tagName, \" (type: \").concat(tagType, \")\"));\n        try {\n            const result = await (0,_lib_plcApi__WEBPACK_IMPORTED_MODULE_2__.debugReadTag)(tagName, tagType);\n            addLog(\"success\", \"Debug read result: \".concat(JSON.stringify(result)));\n        } catch (err) {\n            addLog(\"error\", \"Debug read failed: \".concat(err.message || err));\n        } finally{\n            setIsDebugReading(false);\n        }\n    };\n    // Batch handlers\n    const handleBatchRead = async ()=>{\n        setIsBatchReading(true);\n        // Parse lines as TagName:Type\n        const tags = batchTags.split(\"\\n\").map((t)=>t.trim()).filter(Boolean);\n        const tagObjs = tags.map((line)=>{\n            const [tag, type] = line.split(\":\");\n            return {\n                tag: tag.trim(),\n                type: (type || \"String\").trim()\n            };\n        });\n        addLog(\"info\", \"Batch reading tags: \".concat(tagObjs.map((t)=>\"\".concat(t.tag, \" (\").concat(t.type, \")\")).join(\", \")));\n        try {\n            const result = await (0,_lib_plcApi__WEBPACK_IMPORTED_MODULE_2__.batchReadTags)(tagObjs);\n            setBatchReadResult(result);\n            addLog(\"success\", \"Batch read complete: \".concat(JSON.stringify(result)));\n        } catch (err) {\n            addLog(\"error\", \"Batch read failed: \".concat(err.message || err));\n        } finally{\n            setIsBatchReading(false);\n        }\n    };\n    const handleBatchWrite = async ()=>{\n        setIsBatchWriting(true);\n        // Parse lines as TagName:Type=Value\n        const tagObjs = [];\n        batchWriteData.split(\"\\n\").forEach((line)=>{\n            const [left, value] = line.split(\"=\");\n            if (left && value !== undefined && value !== \"\") {\n                const [tag, type] = left.split(\":\");\n                tagObjs.push({\n                    tag: tag.trim(),\n                    type: (type || \"String\").trim(),\n                    value: value.trim()\n                });\n            }\n        });\n        addLog(\"info\", \"Batch writing: \".concat(JSON.stringify(tagObjs)));\n        try {\n            const result = await (0,_lib_plcApi__WEBPACK_IMPORTED_MODULE_2__.batchWriteTags)(tagObjs);\n            setBatchWriteResult(result);\n            addLog(\"success\", \"Batch write complete: \".concat(JSON.stringify(result)));\n        } catch (err) {\n            addLog(\"error\", \"Batch write failed: \".concat(err.message || err));\n        } finally{\n            setIsBatchWriting(false);\n        }\n    };\n    // Performance benchmark\n    const handleRunBenchmark = async ()=>{\n        setIsRunningBenchmark(true);\n        addLog(\"info\", \"Running benchmark on tag: \".concat(benchmarkTestTag));\n        try {\n            const result = await (0,_lib_plcApi__WEBPACK_IMPORTED_MODULE_2__.runBenchmark)(benchmarkTestTag, benchmarkTestType, benchmarkTestWrites);\n            setBenchmarkResults(result);\n            addLog(\"success\", \"Benchmark complete: \".concat(JSON.stringify(result)));\n        } catch (err) {\n            addLog(\"error\", \"Benchmark failed: \".concat(err.message || err));\n        } finally{\n            setIsRunningBenchmark(false);\n        }\n    };\n    // UI rendering\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"space-y-6\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex items-center justify-end mb-2\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex items-center gap-2\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"font-semibold text-sm px-3 py-1 rounded-full \".concat(isConnected ? \"bg-green-100 text-green-700\" : \"bg-red-100 text-red-700\"),\n                        children: isConnected ? \"Connected\" : \"Disconnected\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                        lineNumber: 242,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                    lineNumber: 241,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                lineNumber: 240,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bg-white bg-opacity-80 rounded-xl shadow p-4 flex items-center gap-2\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        className: \"border rounded-lg px-3 py-2 flex-1 focus:ring-2 focus:ring-purple-400 outline-none\",\n                        value: plcAddress,\n                        onChange: (e)=>setPlcAddress(e.target.value),\n                        disabled: isConnected || isConnecting\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                        lineNumber: 247,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg font-semibold disabled:opacity-50 transition\",\n                        onClick: handleConnect,\n                        disabled: isConnected || isConnecting,\n                        children: \"Connect\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                        lineNumber: 253,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"bg-red-400 hover:bg-red-500 text-white px-4 py-2 rounded-lg font-semibold disabled:opacity-50 transition\",\n                        onClick: handleDisconnect,\n                        disabled: !isConnected,\n                        children: \"Disconnect\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                        lineNumber: 260,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                lineNumber: 246,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"rounded-xl p-1 bg-gradient-to-r from-purple-500 via-pink-400 to-blue-400 flex gap-2 shadow mb-2\",\n                children: TABS.map((tab)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"flex-1 px-4 py-2 rounded-lg font-semibold transition text-sm \".concat(activeTab === tab ? \"bg-white bg-opacity-90 text-purple-700 shadow\" : \"text-white hover:bg-white hover:bg-opacity-20\"),\n                        onClick: ()=>setActiveTab(tab),\n                        children: [\n                            tab === \"Individual\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                role: \"img\",\n                                \"aria-label\": \"individual\",\n                                children: \"\\uD83D\\uDCCA\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                lineNumber: 276,\n                                columnNumber: 38\n                            }, this),\n                            tab === \"Batch\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                role: \"img\",\n                                \"aria-label\": \"batch\",\n                                children: \"⚡\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                lineNumber: 277,\n                                columnNumber: 33\n                            }, this),\n                            tab === \"Performance\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                role: \"img\",\n                                \"aria-label\": \"performance\",\n                                children: \"\\uD83D\\uDCC8\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                lineNumber: 278,\n                                columnNumber: 39\n                            }, this),\n                            tab === \"Config\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                role: \"img\",\n                                \"aria-label\": \"config\",\n                                children: \"⚙️\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                lineNumber: 279,\n                                columnNumber: 34\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"ml-1\",\n                                children: [\n                                    tab,\n                                    \" Operations\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                lineNumber: 280,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, tab, true, {\n                        fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                        lineNumber: 271,\n                        columnNumber: 11\n                    }, this))\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                lineNumber: 269,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid grid-cols-1 md:grid-cols-3 gap-6\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"md:col-span-2 space-y-6\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"bg-white bg-opacity-90 rounded-2xl shadow p-6\",\n                            children: [\n                                activeTab === \"Individual\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                            className: \"font-bold text-lg mb-4 flex items-center gap-2\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    role: \"img\",\n                                                    \"aria-label\": \"individual\",\n                                                    children: \"\\uD83D\\uDCCA\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                    lineNumber: 291,\n                                                    columnNumber: 80\n                                                }, this),\n                                                \" Individual Tag Operations\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                            lineNumber: 291,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"flex flex-col gap-2 mb-4\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"flex flex-col sm:flex-row gap-2 items-center mb-2\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                            type: \"text\",\n                                                            value: tagName,\n                                                            onChange: (e)=>setTagName(e.target.value),\n                                                            placeholder: \"Enter tag name\",\n                                                            className: \"flex-1 px-3 py-2 bg-white text-black rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                            lineNumber: 294,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                                            value: tagType,\n                                                            onChange: (e)=>setTagType(e.target.value),\n                                                            className: \"px-3 py-2 bg-white text-black rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500\",\n                                                            children: [\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                                    value: \"Bool\",\n                                                                    children: \"Bool\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                                    lineNumber: 306,\n                                                                    columnNumber: 23\n                                                                }, this),\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                                    value: \"Sint\",\n                                                                    children: \"Sint\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                                    lineNumber: 307,\n                                                                    columnNumber: 23\n                                                                }, this),\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                                    value: \"Int\",\n                                                                    children: \"Int\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                                    lineNumber: 308,\n                                                                    columnNumber: 23\n                                                                }, this),\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                                    value: \"Dint\",\n                                                                    children: \"Dint\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                                    lineNumber: 309,\n                                                                    columnNumber: 23\n                                                                }, this),\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                                    value: \"Lint\",\n                                                                    children: \"Lint\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                                    lineNumber: 310,\n                                                                    columnNumber: 23\n                                                                }, this),\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                                    value: \"Usint\",\n                                                                    children: \"Usint\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                                    lineNumber: 311,\n                                                                    columnNumber: 23\n                                                                }, this),\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                                    value: \"Uint\",\n                                                                    children: \"Uint\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                                    lineNumber: 312,\n                                                                    columnNumber: 23\n                                                                }, this),\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                                    value: \"Udint\",\n                                                                    children: \"Udint\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                                    lineNumber: 313,\n                                                                    columnNumber: 23\n                                                                }, this),\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                                    value: \"Ulint\",\n                                                                    children: \"Ulint\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                                    lineNumber: 314,\n                                                                    columnNumber: 23\n                                                                }, this),\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                                    value: \"Real\",\n                                                                    children: \"Real\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                                    lineNumber: 315,\n                                                                    columnNumber: 23\n                                                                }, this),\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                                    value: \"Lreal\",\n                                                                    children: \"Lreal\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                                    lineNumber: 316,\n                                                                    columnNumber: 23\n                                                                }, this),\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                                    value: \"String\",\n                                                                    children: \"String\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                                    lineNumber: 317,\n                                                                    columnNumber: 23\n                                                                }, this),\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                                    value: \"Udt\",\n                                                                    children: \"Udt\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                                    lineNumber: 318,\n                                                                    columnNumber: 23\n                                                                }, this)\n                                                            ]\n                                                        }, void 0, true, {\n                                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                            lineNumber: 301,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                            type: \"text\",\n                                                            value: tagValue,\n                                                            onChange: (e)=>setTagValue(e.target.value),\n                                                            placeholder: \"Value\",\n                                                            className: \"flex-1 px-3 py-2 bg-white text-black rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                            lineNumber: 320,\n                                                            columnNumber: 21\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                    lineNumber: 293,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"flex flex-row gap-2 justify-end mb-4\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                            className: \"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg font-semibold disabled:opacity-50 transition\",\n                                                            onClick: handleReadTag,\n                                                            disabled: !isConnected || isReading,\n                                                            children: isReading ? \"Reading...\" : \"Read\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                            lineNumber: 329,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                            className: \"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg font-semibold disabled:opacity-50 transition\",\n                                                            onClick: handleWriteTag,\n                                                            disabled: !isConnected || isWriting,\n                                                            children: isWriting ? \"Writing...\" : \"Write\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                            lineNumber: 336,\n                                                            columnNumber: 21\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                    lineNumber: 328,\n                                                    columnNumber: 19\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                            lineNumber: 292,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"mb-2 text-sm\",\n                                            children: [\n                                                \"Last Read Value: \",\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"font-mono text-base\",\n                                                    children: readValue !== null ? String(readValue) : \"-\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                    lineNumber: 345,\n                                                    columnNumber: 64\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                            lineNumber: 345,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                    lineNumber: 290,\n                                    columnNumber: 15\n                                }, this),\n                                activeTab === \"Batch\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                            className: \"font-bold text-lg mb-4 flex items-center gap-2\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    role: \"img\",\n                                                    \"aria-label\": \"batch\",\n                                                    children: \"⚡\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                    lineNumber: 350,\n                                                    columnNumber: 80\n                                                }, this),\n                                                \" Batch Operations\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                            lineNumber: 350,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"space-y-4\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                            className: \"block text-sm font-medium text-gray-300 mb-1\",\n                                                            children: \"Tags (one per line, format: TagName:Type, e.g. TestBool:Bool)\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                            lineNumber: 353,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                                                            value: batchTags,\n                                                            onChange: (e)=>setBatchTags(e.target.value),\n                                                            placeholder: \"Example:\\nTestTag:Bool\\nTestBool:Bool\\nTestInt:Dint\\nTestReal:Real\\nTestString:String\",\n                                                            className: \"w-full h-32 px-3 py-2 bg-white text-black rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                            lineNumber: 356,\n                                                            columnNumber: 21\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                    lineNumber: 352,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                            className: \"block text-sm font-medium text-gray-300 mb-1\",\n                                                            children: \"Tag Values (one per line, format: TagName:Type=Value, e.g. TestBool:Bool=true)\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                            lineNumber: 364,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                                                            value: batchWriteData,\n                                                            onChange: (e)=>setBatchWriteData(e.target.value),\n                                                            placeholder: \"Example:\\nTestTag:Bool=true\\nTestBool:Bool=false\\nTestInt:Dint=999\\nTestReal:Real=88.8\\nTestString:String=Hello PLC\",\n                                                            className: \"w-full h-32 px-3 py-2 bg-white text-black rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                            lineNumber: 367,\n                                                            columnNumber: 21\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                    lineNumber: 363,\n                                                    columnNumber: 19\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                            lineNumber: 351,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"flex flex-row gap-2 justify-end\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    className: \"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg font-semibold disabled:opacity-50 transition\",\n                                                    onClick: handleBatchRead,\n                                                    disabled: !isConnected || isBatchReading,\n                                                    children: \"Batch Read\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                    lineNumber: 376,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    className: \"bg-yellow-500 hover:bg-yellow-600 text-white px-4 py-2 rounded-lg font-semibold disabled:opacity-50 transition\",\n                                                    onClick: handleBatchWrite,\n                                                    disabled: !isConnected || isBatchWriting,\n                                                    children: \"Batch Write\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                    lineNumber: 383,\n                                                    columnNumber: 19\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                            lineNumber: 375,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"mt-2 text-sm\",\n                                            children: [\n                                                \"Batch Read Result: \",\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"font-mono text-base\",\n                                                    children: batchReadResult ? JSON.stringify(batchReadResult, null, 2) : \"-\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                    lineNumber: 391,\n                                                    columnNumber: 66\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                            lineNumber: 391,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"mb-2 text-sm\",\n                                            children: [\n                                                \"Batch Write Result: \",\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"font-mono text-base\",\n                                                    children: batchWriteResult ? JSON.stringify(batchWriteResult) : \"-\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                    lineNumber: 392,\n                                                    columnNumber: 67\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                            lineNumber: 392,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                    lineNumber: 349,\n                                    columnNumber: 15\n                                }, this),\n                                activeTab === \"Performance\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                            className: \"font-bold text-lg mb-4 flex items-center gap-2\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    role: \"img\",\n                                                    \"aria-label\": \"performance\",\n                                                    children: \"\\uD83D\\uDCC8\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                    lineNumber: 397,\n                                                    columnNumber: 80\n                                                }, this),\n                                                \" Performance Benchmark\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                            lineNumber: 397,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"flex flex-col sm:flex-row gap-2 mb-4\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                    type: \"text\",\n                                                    value: benchmarkTestTag,\n                                                    onChange: (e)=>setBenchmarkTestTag(e.target.value),\n                                                    placeholder: \"Benchmark Tag Name\",\n                                                    className: \"flex-1 px-3 py-2 bg-white text-black rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                    lineNumber: 399,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                                    value: benchmarkTestType,\n                                                    onChange: (e)=>setBenchmarkTestType(e.target.value),\n                                                    className: \"px-3 py-2 bg-white text-black rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                            value: \"Bool\",\n                                                            children: \"Bool\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                            lineNumber: 411,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                            value: \"Sint\",\n                                                            children: \"Sint\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                            lineNumber: 412,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                            value: \"Int\",\n                                                            children: \"Int\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                            lineNumber: 413,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                            value: \"Dint\",\n                                                            children: \"Dint\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                            lineNumber: 414,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                            value: \"Lint\",\n                                                            children: \"Lint\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                            lineNumber: 415,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                            value: \"Usint\",\n                                                            children: \"Usint\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                            lineNumber: 416,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                            value: \"Uint\",\n                                                            children: \"Uint\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                            lineNumber: 417,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                            value: \"Udint\",\n                                                            children: \"Udint\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                            lineNumber: 418,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                            value: \"Ulint\",\n                                                            children: \"Ulint\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                            lineNumber: 419,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                            value: \"Real\",\n                                                            children: \"Real\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                            lineNumber: 420,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                            value: \"Lreal\",\n                                                            children: \"Lreal\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                            lineNumber: 421,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                            value: \"String\",\n                                                            children: \"String\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                            lineNumber: 422,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                            value: \"Udt\",\n                                                            children: \"Udt\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                            lineNumber: 423,\n                                                            columnNumber: 21\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                    lineNumber: 406,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                    className: \"flex items-center gap-1 text-sm\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                            type: \"checkbox\",\n                                                            checked: benchmarkTestWrites,\n                                                            onChange: (e)=>setBenchmarkTestWrites(e.target.checked)\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                            lineNumber: 426,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        \"Write Test\"\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                    lineNumber: 425,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    className: \"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded-lg font-semibold disabled:opacity-50 transition\",\n                                                    onClick: handleRunBenchmark,\n                                                    disabled: !isConnected || isRunningBenchmark,\n                                                    children: \"Run Benchmark\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                    lineNumber: 433,\n                                                    columnNumber: 19\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                            lineNumber: 398,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"mb-2 text-sm\",\n                                            children: [\n                                                \"Benchmark Results: \",\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"font-mono text-base\",\n                                                    children: benchmarkResults ? JSON.stringify(benchmarkResults) : \"-\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                    lineNumber: 441,\n                                                    columnNumber: 66\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                            lineNumber: 441,\n                                            columnNumber: 17\n                                        }, this),\n                                        benchmarkResults && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"text-sm mt-1\",\n                                            children: [\n                                                \"Read: \",\n                                                (_benchmarkResults_readRate = benchmarkResults.readRate) === null || _benchmarkResults_readRate === void 0 ? void 0 : _benchmarkResults_readRate.toFixed(0),\n                                                \" ops/sec, Write: \",\n                                                (_benchmarkResults_writeRate = benchmarkResults.writeRate) === null || _benchmarkResults_writeRate === void 0 ? void 0 : _benchmarkResults_writeRate.toFixed(0),\n                                                \" ops/sec\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                            lineNumber: 443,\n                                            columnNumber: 19\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                    lineNumber: 396,\n                                    columnNumber: 15\n                                }, this),\n                                activeTab === \"Config\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                            className: \"font-bold text-lg mb-4 flex items-center gap-2\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    role: \"img\",\n                                                    \"aria-label\": \"config\",\n                                                    children: \"⚙️\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                                    lineNumber: 449,\n                                                    columnNumber: 80\n                                                }, this),\n                                                \" Configuration\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                            lineNumber: 449,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"mb-2 text-sm\",\n                                            children: \"(Add config options here as needed)\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                            lineNumber: 450,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                    lineNumber: 448,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                            lineNumber: 288,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                        lineNumber: 287,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"space-y-6\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"bg-white bg-opacity-90 rounded-2xl shadow p-6 h-full flex flex-col\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                    className: \"font-bold text-lg mb-4 flex items-center gap-2\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            role: \"img\",\n                                            \"aria-label\": \"log\",\n                                            children: \"\\uD83D\\uDCDD\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                            lineNumber: 458,\n                                            columnNumber: 76\n                                        }, this),\n                                        \" Activity Log\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                    lineNumber: 458,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex-1 h-64 overflow-y-auto bg-gray-50 p-3 rounded-lg font-mono text-xs text-gray-700\",\n                                    children: logs.length === 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"text-gray-400 italic\",\n                                        children: \"Activity will be logged here when you interact with the PLC.\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                        lineNumber: 461,\n                                        columnNumber: 17\n                                    }, this) : logs.map((log)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"mb-1 \".concat(log.level === \"error\" ? \"text-red-500\" : log.level === \"success\" ? \"text-green-600\" : log.level === \"warning\" ? \"text-yellow-600\" : \"text-gray-700\"),\n                                            children: \"[\".concat(log.timestamp, \"] [\").concat(log.level.toUpperCase(), \"] \").concat(log.message)\n                                        }, log.id, false, {\n                                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                            lineNumber: 464,\n                                            columnNumber: 19\n                                        }, this))\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                                    lineNumber: 459,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                            lineNumber: 457,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                        lineNumber: 456,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n                lineNumber: 285,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\Sergio Gallegos\\\\projects\\\\rust-ethernet-ip\\\\examples\\\\gonextjs\\\\frontend\\\\src\\\\app\\\\page.tsx\",\n        lineNumber: 238,\n        columnNumber: 5\n    }, this);\n}\n_s(Page, \"sEsMeEvijCFGa5s6tmWCTBrxLpQ=\");\n_c = Page;\nvar _c;\n$RefreshReg$(_c, \"Page\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/lib/plcApi.ts":
/*!***************************!*\
  !*** ./src/lib/plcApi.ts ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   batchReadTags: function() { return /* binding */ batchReadTags; },\n/* harmony export */   batchWriteTags: function() { return /* binding */ batchWriteTags; },\n/* harmony export */   connectToPlc: function() { return /* binding */ connectToPlc; },\n/* harmony export */   createTestTags: function() { return /* binding */ createTestTags; },\n/* harmony export */   debugReadTag: function() { return /* binding */ debugReadTag; },\n/* harmony export */   disconnectPlc: function() { return /* binding */ disconnectPlc; },\n/* harmony export */   discoverTag: function() { return /* binding */ discoverTag; },\n/* harmony export */   getPlcStatus: function() { return /* binding */ getPlcStatus; },\n/* harmony export */   readTag: function() { return /* binding */ readTag; },\n/* harmony export */   runBenchmark: function() { return /* binding */ runBenchmark; },\n/* harmony export */   subscribeToTagUpdates: function() { return /* binding */ subscribeToTagUpdates; },\n/* harmony export */   writeTag: function() { return /* binding */ writeTag; }\n/* harmony export */ });\nasync function connectToPlc(ipAddress) {\n    const res = await fetch(\"/api/connect\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            ipAddress\n        })\n    });\n    if (!res.ok) throw new Error(await res.text());\n    return true;\n}\nasync function disconnectPlc() {\n    await fetch(\"/api/disconnect\", {\n        method: \"POST\"\n    });\n}\nasync function readTag(tag, type) {\n    const res = await fetch(\"/api/tag?tag=\".concat(encodeURIComponent(tag), \"&type=\").concat(encodeURIComponent(type)));\n    if (!res.ok) throw new Error(await res.text());\n    const data = await res.json();\n    return data;\n}\nasync function writeTag(tag, value, type) {\n    const res = await fetch(\"/api/tag\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            tag,\n            type,\n            value\n        })\n    });\n    if (!res.ok) throw new Error(await res.text());\n    return true;\n}\nfunction subscribeToTagUpdates(onUpdate) {\n    const ws = new WebSocket(\"ws://\".concat(window.location.hostname, \":8080/ws\"));\n    ws.onmessage = (event)=>{\n        try {\n            const data = JSON.parse(event.data);\n            onUpdate(data);\n        } catch (e) {}\n    };\n    return ()=>ws.close();\n}\nasync function batchReadTags(tags) {\n    const res = await fetch(\"/api/batch\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            tags\n        })\n    });\n    if (!res.ok) throw new Error(await res.text());\n    return await res.json();\n}\nasync function batchWriteTags(tagObjs) {\n    const res = await fetch(\"/api/batch\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            writes: tagObjs\n        })\n    });\n    if (!res.ok) throw new Error(await res.text());\n    return await res.json();\n}\nasync function runBenchmark(tag, type, write) {\n    const res = await fetch(\"/api/benchmark\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            tag,\n            type,\n            write\n        })\n    });\n    if (!res.ok) throw new Error(await res.text());\n    return await res.json();\n}\nasync function getPlcStatus() {\n    // Not implemented in backend, placeholder for future\n    return {\n        status: \"unknown\"\n    };\n}\nasync function createTestTags() {\n    // Not implemented in backend, placeholder for future\n    return {\n        success: false,\n        error: \"Create test tags not implemented\"\n    };\n}\nasync function discoverTag(tag) {\n    const res = await fetch(\"/api/taginfo?tag=\".concat(encodeURIComponent(tag)));\n    if (!res.ok) throw new Error(await res.text());\n    const data = await res.json();\n    return data.type;\n}\nasync function debugReadTag(tag, typeStr) {\n    const res = await fetch(\"/api/test-read?tag=\".concat(encodeURIComponent(tag), \"&type=\").concat(encodeURIComponent(typeStr)));\n    return await res.json();\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/plcApi.ts\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5CSergio%20Gallegos%5Cprojects%5Crust-ethernet-ip%5Cexamples%5Cgonextjs%5Cfrontend%5Csrc%5Capp%5Cpage.tsx&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);